[{"content":"\n# 这是对博客markdown支持程度的测试文章\n# Markdown （从typora那里复制过来的qaq\n\n## mytest\n$$ F=G\\frac{Mm}{R^2} $$\n\n## Overview\n\n**Markdown** is created by [Daring Fireball](http://daringfireball.net/), the original guideline is [here](http://daringfireball.net/projects/markdown/syntax). Its syntax, however, varies between different parsers or editors. **Typora** is using [GitHub Flavored Markdown][GFM]. \n\nPlease note that HTML fragments in markdown source will be recognized but not parsed or rendered. Also, there may be small reformatting on the original markdown source code after saving.\n\n*Outline*\n\n[TOC]\n\n## Block Elements\n\n### Paragraph and line breaks\n\nA paragraph is simply one or more consecutive lines of text. In markdown source code, paragraphs are separated by more than one blank lines. In Typora, you only need to press `Return` to create a new paragraph.\n\nPress `Shift` + `Return` to create a single line break. However, most markdown parser will ignore single line break, to make other markdown parsers recognize your line break, you can leave two whitespace at the end of the line, or insert `\u003cbr/\u003e`.\n\n### Headers\n\nHeaders use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:\n\n``` markdown\n# This is an H1\n\n## This is an H2\n\n###### This is an H6\n```\n\nIn typora, input ‘#’s followed by title content, and press `Return` key will create a header.\n\n### Blockquotes\n\nMarkdown uses email-style \u003e characters for block quoting. They are presented as:\n\n``` markdown\n\u003e This is a blockquote with two paragraphs. This is first paragraph.\n\u003e\n\u003e This is second pragraph.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n\n\n\u003e This is another blockquote with one paragraph. There is three empty line to seperate two blockquote.\n```\n\nIn typora, just input ‘\u003e’ followed by quote contents a block quote is  generated. Typora will insert proper ‘\u003e’ or line break for you. Block quote inside anther block quote is allowed by adding additional levels of ‘\u003e’. \n\n### Lists\n\nInput `* list item 1` will create an un-ordered list, the `*` symbol can be replace with `+` or `-`. \n\nInput `1. list item 1` will create an ordered list, their markdown source code is like:\n\n``` markdown\n## un-ordered list\n*   Red\n*   Green\n*   Blue\n\n## ordered list\n1.  Red\n2. \tGreen\n3.\tBlue\n```\n\n### Task List\n\nTask lists are lists with items marked as either [ ] or [x] (incomplete or complete). For example:\n\n- [ ] a task list item\n- [ ] list syntax required\n- [ ] normal **formatting**, @mentions, #1234 refs\n- [ ] incomplete\n- [x] completed\n\n\n``` markdown\n- [ ] a task list item\n- [ ] list syntax required\n- [ ] normal **formatting**, @mentions, #1234 refs\n- [ ] incomplete\n- [x] completed\n```\n\nYou can change the complete/incomplete state by click the checkbox before the item.\n\n### (Fenced) Code Blocks\n\nTypora only support fences in Github Flavored Markdown. Original code blocks in markdown is not supported.\n\nUsing fences is easy: Input \\`\\`\\` and press `return`. Add an optional language identifier after \\`\\`\\` and we'll run it through syntax highlighting:\n\n``` gfm\nHere's an example:\n\n​```\nfunction test() {\n  console.log(\"notice the blank line before this function?\");\n}\n​```\n\nsyntax highlighting:\n​```ruby\nrequire 'redcarpet'\nmarkdown = Redcarpet.new(\"Hello World!\")\nputs markdown.to_html\n​```\n```\n\n### Math Blocks\n\nYou can render *LaTeX* mathematical expressions using **MathJax**.\n\nInput `$$`, then press 'Return' key will trigger an input field which accept *Tex/LaTex* source. Following is an example:\n$$\n\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix} \n\\mathbf{i} \u0026 \\mathbf{j} \u0026 \\mathbf{k} \\\\\n\\frac{\\partial X}{\\partial u} \u0026  \\frac{\\partial Y}{\\partial u} \u0026 0 \\\\\n\\frac{\\partial X}{\\partial v} \u0026  \\frac{\\partial Y}{\\partial v} \u0026 0 \\\\\n\\end{vmatrix}\n$$\n\n\nIn markdown source file, math block is *LaTeX* expression wrapped by ‘$$’ mark:\n\n``` markdown\n$$\n\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix} \n\\mathbf{i} \u0026 \\mathbf{j} \u0026 \\mathbf{k} \\\\\n\\frac{\\partial X}{\\partial u} \u0026  \\frac{\\partial Y}{\\partial u} \u0026 0 \\\\\n\\frac{\\partial X}{\\partial v} \u0026  \\frac{\\partial Y}{\\partial v} \u0026 0 \\\\\n\\end{vmatrix}\n$$\n```\n\n### Tables\n\nInput `| First Header  | Second Header |` and press `return` key will create a table with two column.\n\nAfter table is created, focus on that table will pop up a toolbar for table, where you can resize, align, or delete table. You can also use context menu to copy and add/delete column/row.\n\nFollowing descriptions can be skipped, as markdown source code for tables are generated by typora automatically.\n\nIn markdown source code, they look like:\n\n| First Header  | Second Header |\n| ------------- | ------------- |\n| Content Cell  | Content Cell  |\n| Content Cell  | Content Cell  |\n\n``` markdown\n| First Header  | Second Header |\n| ------------- | ------------- |\n| Content Cell  | Content Cell  |\n| Content Cell  | Content Cell  |\n```\n\nYou can also include inline Markdown such as links, bold, italics, or strikethrough.\n\nFinally, by including colons : within the header row, you can define text to be left-aligned, right-aligned, or center-aligned:\n\n``` markdown\n| Left-Aligned  | Center Aligned  | Right Aligned |\n| :------------ |:---------------:| -----:|\n| col 3 is      | some wordy text | $1600 |\n| col 2 is      | centered        |   $12 |\n| zebra stripes | are neat        |    $1 |\n```\n\nA colon on the left-most side indicates a left-aligned column; a colon on the right-most side indicates a right-aligned column; a colon on both sides indicates a center-aligned column.\n\n### Footnotes\n\n``` markdown\nYou can create footnotes like this[^footnote].\n\n[^footnote]: Here is the *text* of the **footnote**.\n```\n\nwill produce:\n\nYou can create footnotes like this[^footnote].\n\n[^footnote]: Here is the *text* of the **footnote**.\n\nMouse on the ‘footnote’ superscript to see content of the footnote.\n\n### Horizontal Rules\n\nInput `***` or `---` on a blank line and press `return` will draw a horizontal line.\n\n------\n\n### YAML Front Matter\n\nTypora support [YAML Front Matter](http://jekyllrb.com/docs/frontmatter/) now. Input `---` at the top of the article and then press `Enter` will introduce one. Or insert one metadata block from the menu.\n\n### Table of Contents (TOC)\n\nInput `[toc]` then press `Return` key will create a section for “Table of Contents” extracting all headers from one’s writing, its contents will be updated automatically. \n\n### Diagrams (Sequence, Flowchart and Mermaid)\n\nTypora supports, [sequence](https://bramp.github.io/js-sequence-diagrams/), [flowchart](http://flowchart.js.org/) and [mermaid](https://knsv.github.io/mermaid/#mermaid), after this feature is enabled from preference panel.\n\nSee this [document](http://support.typora.io/Draw-Diagrams-With-Markdown/) for detail.\n\n## Span Elements\n\nSpan elements will be parsed and rendered right after your typing. Moving cursor in middle of those span elements will expand those elements into markdown source. Following will explain the syntax of those span element.\n\n### Links\n\nMarkdown supports two style of links: inline and reference.\n\nIn both styles, the link text is delimited by [square brackets].\n\nTo create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:\n\n``` markdown\nThis is [an example](http://example.com/ \"Title\") inline link.\n\n[This link](http://example.net/) has no title attribute.\n```\n\nwill produce:\n\nThis is [an example](http://example.com/\"Title\") inline link. (`\u003cp\u003eThis is \u003ca href=\"http://example.com/\" title=\"Title\"\u003e`)\n\n[This link](http://example.net/) has no title attribute. (`\u003cp\u003e\u003ca href=\"http://example.net/\"\u003eThis link\u003c/a\u003e has no`)\n\n#### Internal Links\n\n**You can set the href to headers**, which will create a bookmark that allow you to jump to that section after clicking. For example:\n\nCommand(on Windows: Ctrl) + Click [This link](#block-elements) will jump to header `Block Elements`. To see how to write that, please move cursor or click that link with `⌘` key pressed to expand the element into markdown source.\n\n#### Reference Links \n\nReference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:\n\n``` markdown\nThis is [an example][id] reference-style link.\n\nThen, anywhere in the document, you define your link label like this, on a line by itself:\n\n[id]: http://example.com/  \"Optional Title Here\"\n```\n\nIn typora, they will be rendered like:\n\nThis is [an example][id] reference-style link.\n\n[id]: http://example.com/\t\"Optional Title Here\"\n\nThe implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets — e.g., to link the word “Google” to the google.com web site, you could simply write:\n\n``` markdown\n[Google][]\nAnd then define the link:\n\n[Google]: http://google.com/\n```\n\nIn typora click link will expand it for editing, command+click will open the hyperlink in web browser.\n\n### URLs\n\nTypora allows you to insert urls as links, wrapped by `\u003c`brackets`\u003e`.\n\n`\u003ci@typora.io\u003e` becomes \u003ci@typora.io\u003e.\n\nTypora will aslo auto link standard URLs. e.g: www.google.com.\n\n### Images\n\nImage looks similar with links, but it requires an additional `!` char before the start of link. Image syntax looks like this:\n\n``` markdown\n![Alt text](/path/to/img.jpg)\n\n![Alt text](/path/to/img.jpg \"Optional title\")\n```\n\nYou are able to use drag \u0026 drop to insert image from image file or we browser. And modify the markdown source code by clicking on the image. Relative path will be used if image is in same directory or sub-directory with current editing document when drag \u0026 drop.\n\nFor more tips on images, please read \u003chttp://support.typora.io//Images/\u003e\n\n### Emphasis\n\nMarkdown treats asterisks (`*`) and underscores (`_`) as indicators of emphasis. Text wrapped with one `*` or `_` will be wrapped with an HTML `\u003cem\u003e` tag. E.g:\n\n``` markdown\n*single asterisks*\n\n_single underscores_\n```\n\noutput: \n\n*single asterisks*\n\n_single underscores_\n\nGFM will ignores underscores in words, which is commonly used in code and names, like this:\n\n\u003e wow_great_stuff\n\u003e\n\u003e do_this_and_do_that_and_another_thing.\n\nTo produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:\n\n``` markdown\n\\*this text is surrounded by literal asterisks\\*\n```\n\nTypora recommends to use `*` symbol.\n\n### Strong\n\ndouble *’s or _’s will be wrapped with an HTML `\u003cstrong\u003e` tag, e.g:\n\n``` markdown\n**double asterisks**\n\n__double underscores__\n```\n\noutput:\n\n**double asterisks**\n\n__double underscores__\n\nTypora recommends to use `**` symbol.\n\n### Code\n\nTo indicate a span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:\n\n``` markdown\nUse the `printf()` function.\n```\n\nwill produce:\n\nUse the `printf()` function.\n\n### Strikethrough\n\nGFM adds syntax to create strikethrough text, which is missing from standard Markdown.\n\n`~~Mistaken text.~~` becomes ~~Mistaken text.~~\n\n### Underline\n\nUnderline is powered by raw HTML.\n\n`\u003cu\u003eUnderline\u003c/u\u003e` becomes \u003cu\u003eUnderline\u003c/u\u003e.\n\n### Emoji :happy:\n\nInput emoji with syntax `:smile:`. \n\nUser can trigger auto-complete suggestions for emoji by pressing `ESC` key, or trigger it automatically after enable it on preference panel. Also, input UTF8 emoji char directly from `Edit` -\u003e `Emoji \u0026 Symbols` from menu bar is also supported. \n\n### HTML\n\nTypora cannot render html fragments. But typora can parse and render very limited HTML fragments, as an extension of Markdown, including:\n\n- Underline: `\u003cu\u003eunderline\u003c/u\u003e`\n- Image: `\u003cimg src=\"http://www.w3.org/html/logo/img/mark-word-icon.png\" width=\"200px\" /\u003e` (And `width`, `height` attribute in HTML tag, and `width`, `height`, `zoom` style in `style` attribute will be applied.)\n- Comments: `\u003c!-- This is some comments --\u003e`\n- Hyperlink: `\u003ca href=\"http://typora.io\" target=\"_blank\"\u003elink\u003c/a\u003e`.\n\nMost of their attributes, styles, or classes will be ignored. For other tags, typora will render them as raw HTML snippets. \n\nBut those HTML will be exported on print or export.\n\n### Inline Math\n\nTo use this feature, first, please enable it in `Preference` Panel -\u003e `Markdown` Tab. Then use `$` to wrap TeX command, for example: `$\\lim_{x \\to \\infty} \\exp(-x) = 0$` will be rendered as LaTeX command. \n\nTo trigger inline preview for inline math: input “$”, then press `ESC` key, then input TeX command, a preview tooltip will be visible like below:\n\n\u003cimg src=\"http://typora.io/img/inline-math.gif\" style=\"zoom:50%;\" /\u003e\n\n### Subscript\n\nTo use this feature, first, please enable it in `Preference` Panel -\u003e `Markdown` Tab. Then use `~` to wrap subscript content, for example: `H~2~O`, `X~long\\ text~`/\n\n### Superscript\n\nTo use this feature, first, please enable it in `Preference` Panel -\u003e `Markdown` Tab. Then use `^` to wrap superscript content, for example: `X^2^`.\n\n### Highlight\n\nTo use this feature, first, please enable it in `Preference` Panel -\u003e `Markdown` Tab. Then use `==` to wrap superscript content, for example: `==highlight==`. \n\n[GFM]: https://help.github.com/articles/github-flavored-markdown/\n","cover":"","link":"markdown-test.html","preview":"\u003cp\u003e似乎inkpaper没有对于数学公式的支持啊。。\u003c/p\u003e\n","title":"markdown-test"}]